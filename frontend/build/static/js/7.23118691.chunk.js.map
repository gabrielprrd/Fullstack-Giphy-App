{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/User/styles.js","pages/User/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","SUserGifContainer","styled","div","device","tablet","SDeleteButton","SButton","User","useContext","AuthContext","user","setUser","removeGif","item","axios","method","url","_id","data","filteredState","gifs","gif","id","updatedUser","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useEffect","a","email","response","fetchFromServer","name","map","src","images","fixed_height","alt","title","onClick"],"mappings":"qGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,E,8wBCTF,IAAMQ,EAAoBC,IAAOC,IAAV,IAOnBC,IAAOC,QAoBLC,EAAgBJ,YAAOK,IAAPL,CAAH,K,QCjBX,SAASM,IAAQ,IAAD,EACHC,qBAAWC,KAA7BC,EADqB,EACrBA,KAAMC,EADe,EACfA,QAed,SAASC,EAAUC,GACjBC,IAAM,CACJC,OAAQ,OACRC,IAAI,mCAAD,OAAqCN,EAAKO,KAC7CC,KAAML,IAIR,IAAMM,EAAgBT,EAAKU,KAAKzB,QAAO,SAAC0B,GAAD,OAASA,EAAIC,KAAOT,EAAKS,MAC5DC,EFvBO,SAAwBC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNpC,EAAQL,OAAO4C,IAAS,GAAMC,SAAQ,SAAU/C,GAC9C,EAAe0C,EAAQ1C,EAAK8C,EAAO9C,OAE5BE,OAAO8C,0BAChB9C,OAAO+C,iBAAiBP,EAAQxC,OAAO8C,0BAA0BF,IAEjEvC,EAAQL,OAAO4C,IAASC,SAAQ,SAAU/C,GACxCE,OAAOC,eAAeuC,EAAQ1C,EAAKE,OAAOa,yBAAyB+B,EAAQ9C,OAKjF,OAAO0C,EEMU,IAAQd,GACvBa,EAAYH,KAAOD,EACnBR,EAAQY,GAGV,OA3BAS,qBAAU,YACa,uCAAG,8BAAAC,EAAA,6DAClBC,EAAQxB,EAAKwB,MADK,SAECpB,IAAM,CAC3BC,OAAQ,OACRC,IAAK,8CACLE,KAAM,CAAEgB,WALY,cAEhBC,EAFgB,gBAOhBxB,EAAQwB,EAASjB,KAAKR,MAPN,2CAAH,qDASrB0B,KACC,IAiBD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wCAAc1B,EAAK2B,KAAnB,KACC3B,EAAKU,KAAKO,OAAS,EAClB,0DAEA,iEAEF,kBAAC,IAAD,KACGjB,EAAKU,KAAKkB,KAAI,SAACzB,GACd,OACE,kBAACb,EAAD,CAAmBlB,IAAK+B,EAAKS,IAC3B,yBAAKiB,IAAK1B,EAAK2B,OAAOC,aAAazB,IAAK0B,IAAK7B,EAAK8B,QAClD,kBAACtC,EAAD,CAAeuC,QAAS,kBAAMhC,EAAUC,KAAxC","file":"static/js/7.23118691.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import styled from \"styled-components\";\nimport { device } from \"../../assets/globalStyles/device\";\nimport { SButton } from \"../../assets/globalStyles/globalStyles\";\n\nexport const SUserGifContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.7em;\n  margin-bottom: 20px;\n\n  @media ${device.tablet} {\n    grid-template-columns: 1fr;\n    margin-top: 60px;\n    padding: 0.2em;\n  }\n\n  img {\n    max-width: 100%;\n    margin-bottom: 5px;\n  }\n\n  &:hover {\n    button {\n      transition: var(--ghost-transition-time);\n      display: block;\n      z-index: 3;\n    }\n  }\n`;\n\nexport const SDeleteButton = styled(SButton)`\n  position: absolute;\n  display: none;\n  transition: var(--ghost-transition-time);\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Styles\nimport {\n  SContainer,\n  SGifsFlexContainer,\n  SGifsListContainer,\n} from \"../../assets/globalStyles/containers\";\nimport { SUserGifContainer, SDeleteButton } from \"./styles\";\n\n// Context\nimport { AuthContext } from \"../../store/AuthProvider\";\n\nexport default function User() {\n  const { user, setUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchFromServer = async () => {\n      let email = user.email;\n      const response = await axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/auth/updatesavedgifs/\",\n        data: { email },\n      });\n      await setUser(response.data.user);\n    };\n    fetchFromServer();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function removeGif(item) {\n    axios({\n      method: \"post\",\n      url: `http://localhost:5000/deletegif/${user._id}`,\n      data: item,\n    });\n\n    // setIsDeleted(true);\n    const filteredState = user.gifs.filter((gif) => gif.id !== item.id);\n    let updatedUser = { ...user };\n    updatedUser.gifs = filteredState;\n    setUser(updatedUser);\n  }\n\n  return (\n    <SContainer>\n      <SGifsFlexContainer>\n        <h1>Welcome, {user.name}!</h1>\n        {user.gifs.length > 0 ? (\n          <p>Here are the gifs you saved</p>\n        ) : (\n          <p>You still don't have any gif saved</p>\n        )}\n        <SGifsListContainer>\n          {user.gifs.map((item) => {\n            return (\n              <SUserGifContainer key={item.id}>\n                <img src={item.images.fixed_height.url} alt={item.title} />\n                <SDeleteButton onClick={() => removeGif(item)}>\n                  Delete\n                </SDeleteButton>\n              </SUserGifContainer>\n            );\n          })}\n        </SGifsListContainer>\n      </SGifsFlexContainer>\n    </SContainer>\n  );\n}\n"],"sourceRoot":""}