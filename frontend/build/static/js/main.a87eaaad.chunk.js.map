{"version":3,"sources":["store/AuthProvider.js","assets/globalStyles/containers.js","assets/globalStyles/globalStyles.js","store/GifsProvider.js","assets/images/ghost-logo.svg","assets/images/arrow.svg","components/Header/styles.js","components/LogoutButton/styles.js","components/LogoutButton/index.js","components/Header/index.js","components/Footer/styles.js","components/Footer/index.js","components/Loading/styles.js","components/Loading/index.js","components/ScrollTopButton/styles.js","components/ScrollTopButton/index.js","store/routes.js","App.js","serviceWorker.js","index.js","assets/globalStyles/device.js"],"names":["AuthContext","createContext","AuthProvider","children","useState","isAuth","setAuth","user","setUser","useEffect","a","axios","get","response","data","isAuthenticated","Error","fetchFromServer","Provider","value","AppContainer","styled","div","SContainer","SGifsFlexContainer","SGifsListContainer","device","tablet","SInnerFormContainer","GlobalStyle","createGlobalStyle","SButton","button","SLabel","label","SForm","Form","SLoginSigninSuggestion","p","GifsContext","GifsProvider","gifs","setGifs","module","exports","SHeader","header","SLogoContainer","SNav","nav","props","isMenuClicked","SBurgerMenu","SBar","SBar2","SBar3","SLogoutButton","LogoutButton","handleClick","hideNav","onClick","Header","useContext","history","useHistory","setClick","userInfo","push","src","GhostLogo","alt","to","SFooter","footer","mobileL","Footer","role","aria-label","href","SLoadingSpinner","index","className","ScrollTopBtn","showScroll","ScrollTopButton","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","Arrow","PrivateRoute","Component","component","rest","render","location","pathname","state","from","Home","lazy","Login","Signin","User","App","fallback","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","size","mobileS","mobileM","laptop","laptopL","desktop","desktopL"],"mappings":"+OAKaA,EAAcC,0BAEZ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACvBC,oBAAS,GADc,mBAC1CC,EAD0C,KAClCC,EADkC,OAEzBF,mBAAS,IAFgB,mBAE1CG,EAF0C,KAEpCC,EAFoC,KAsBjD,OAhBAC,qBAAU,YACa,uCAAG,kCAAAC,EAAA,+EAECC,IAAMC,IACzB,4CAHkB,cAEhBC,EAFgB,SAKYA,EAASC,KAAnCC,EALc,EAKdA,gBAAiBR,EALH,EAKGA,KALH,SAMdD,EAAQS,GANM,uBAOdP,EAAQD,GAPM,+DASd,IAAIS,MAAJ,MATc,0DAAH,qDAYrBC,KACC,IAGD,kBAACjB,EAAYkB,SAAb,CAAsBC,MAAO,CAAEZ,OAAMC,UAASH,SAAQC,YACnDH,K,06CC5BA,IAAMiB,EAAeC,IAAOC,IAAV,KAUZC,EAAaF,IAAOC,IAAV,KASVE,EAAqBH,IAAOC,IAAV,KAQlBG,EAAqBJ,IAAOC,IAAV,IAOpBI,IAAOC,QAMLC,EAAsBP,IAAOC,IAAV,KAMFD,IAAOC,IAAV,M,qkDC9CpB,IAAMO,EAAcC,YAAH,KA4BXC,EAAUV,IAAOW,OAAV,KAsBPC,EAASZ,IAAOa,MAAV,KAINC,EAAQd,YAAOe,IAAPf,CAAH,KAKLgB,EAAyBhB,IAAOiB,EAAV,M,gICzDtBC,EAActC,0BAEZ,SAASuC,EAAT,GAAqC,IAAbrC,EAAY,EAAZA,SAAY,EACzBC,mBAAS,IADgB,mBAC1CqC,EAD0C,KACpCC,EADoC,KAGjD,OACE,kBAACH,EAAYrB,SAAb,CAAsBC,MAAO,CAAEsB,OAAMC,YAClCvC,K,mBCZPwC,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,60DCGpC,IAAMC,EAAUxB,IAAOyB,OAAV,KAWPC,EAAiB1B,IAAOC,IAAV,KAgBd0B,EAAO3B,IAAO4B,IAAV,IAUNvB,IAAOC,QAWL,SAACuB,GAAD,OAAYA,EAAMC,cAAgB,IAAM,UASxCC,EAAc/B,IAAOC,IAAV,IAKbI,IAAOC,QAKL0B,EAAOhC,IAAOC,IAAV,KAMF,SAAC4B,GAAD,OACXA,EAAMC,cAAgB,sCAAwC,UAGrDG,EAAQjC,YAAOgC,EAAPhC,CAAH,KAEL,SAAC6B,GAAD,OAAYA,EAAMC,cAAgB,EAAI,KAGtCI,EAAQlC,YAAOgC,EAAPhC,CAAH,KACH,SAAC6B,GAAD,OACXA,EAAMC,cAAgB,sCAAwC,U,yQCpF3D,IAAMK,EAAgBnC,IAAOW,OAAV,IAQfN,IAAOC,QCRH,SAAS8B,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAClD,OACE,kBAACH,EAAD,CACEI,QAAS,WACPF,IACAC,MAHJ,UCYW,SAASE,IAAU,IAAD,EACMC,qBAAW9D,KAAxCK,EADuB,EACvBA,OAAQC,EADe,EACfA,QAASE,EADM,EACNA,QACnBuD,EAAUC,cAFe,EAGG5D,oBAAS,GAHZ,mBAGxB+C,EAHwB,KAGTc,EAHS,iDAK/B,kCAAAvD,EAAA,+EAG2BC,IAAMC,IAAI,qCAHrC,cAGUC,EAHV,SAIwCA,EAASC,KAAvCC,EAJV,EAIUA,gBAAiBmD,EAJ3B,EAI2BA,SAJ3B,SAKU5D,EAAQS,GALlB,uBAMUP,EAAQ0D,GANlB,wBAQUH,EAAQI,KAAK,UARvB,gEAUU,IAAInD,MAAJ,MAVV,2DAL+B,sBAuB/B,SAAS2C,IACPM,GAAS,GAGX,OACE,kBAACpB,EAAD,KACE,kBAACE,EAAD,KACE,yBAAKqB,IAAKC,IAAWC,IAAI,eACzB,kBAAC,IAAD,CAASC,GAAG,KAAZ,4BAEF,kBAACvB,EAAD,CAAMG,cAAeA,GACnB,kBAAC,IAAD,CAASoB,GAAG,IAAIX,QAASD,GAAzB,QAGCtD,EACC,kBAACoD,EAAD,CAAcC,YAtCS,2CAsCiBC,QAASA,IAEjD,kBAAC,IAAD,CAASY,GAAG,SAASX,QAASD,GAA9B,SAIDtD,EACC,+BAEA,kBAAC,IAAD,CAASkE,GAAG,UAAUX,QAASD,GAA/B,UAIF,kBAAC,IAAD,CAASY,GAAG,QAAQX,QAASD,GAA7B,eAIF,kBAACP,EAAD,CAAaQ,QApCjB,WACEK,GAAUd,KAoCN,kBAACE,EAAD,CAAMF,cAAeA,IACrB,kBAACG,EAAD,CAAOH,cAAeA,IACtB,kBAACI,EAAD,CAAOJ,cAAeA,M,8YCxEvB,IAAMqB,EAAUnD,IAAOoD,OAAV,IAgBT/C,IAAOgD,SCfH,SAASC,IACtB,OACE,kBAACH,EAAD,KACE,6BACE,4CACiB,IACf,0BAAMI,KAAK,MAAMC,aAAW,QAA5B,gBAEQ,MAGZ,6BACE,2BACG,IADH,MAEK,uBAAGC,KAAK,kCAAR,qB,ynCChBN,IAAMC,EAAkB1D,IAAOC,IAAV,KCEb,SAAS0D,IACtB,OACE,kBAAC,IAAD,KACE,kBAACD,EAAD,KACE,yBAAKE,UAAU,mBACb,8BACA,iC,+jBCRH,IAAMC,EAAe7D,IAAOC,IAAV,KACZ,qBAAG6D,WAA+B,OAAS,U,iBCCzC,SAASC,IAAmB,IAAD,EACJhF,oBAAS,GADL,mBACjC+E,EADiC,KACrBE,EADqB,KAiBxC,OAFAC,OAAOC,iBAAiB,UAZxB,YACOJ,GAAcG,OAAOE,YAAc,IACtCH,GAAc,GACLF,GAAcG,OAAOE,aAAe,KAC7CH,GAAc,MAWhB,kBAACH,EAAD,CAActB,QAPhB,WACE0B,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAMFR,WAAYA,GAC5C,yBAAKf,IAAKwB,IAAOtB,IAAI,wB,4BClBZ,SAASuB,GAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9D3F,EAAWyD,qBAAW9D,KAAtBK,OAER,OACE,kBAAC,IAAD,iBACM2F,EADN,CAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN7F,EACE,kBAACyF,EAAcI,GAEf,kBAAC,IAAD,CAAU3B,GAAI,CAAE4B,SAAU,SAAUC,MAAO,CAAEC,KAAMH,UCM7D,IAAMI,GAAOC,gBAAK,kBAAM,sDAClBC,GAAQD,gBAAK,kBAAM,sDACnBE,GAASF,gBAAK,kBAAM,sDACpBG,GAAOH,gBAAK,kBAAM,gCAyBTI,OAvBf,WACE,OACE,kBAACnE,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAU0G,SAAU,kBAAC,EAAD,OAClB,kBAAC/C,EAAD,MACA,kBAAC,IAAD,CAAOgD,KAAK,IAAIC,OAAK,EAACf,UAAWO,KACjC,kBAAC,IAAD,CAAOO,KAAK,SAASd,UAAWS,KAChC,kBAAC,IAAD,CAAOK,KAAK,UAAUd,UAAWU,KACjC,kBAACZ,GAAD,CAAcgB,KAAK,QAAQd,UAAWW,KACtC,kBAACtB,EAAD,MACA,kBAACT,EAAD,YC5BMoC,QACW,cAA7BzB,OAAOY,SAASc,UAEe,UAA7B1B,OAAOY,SAASc,UAEhB1B,OAAOY,SAASc,SAASC,MACvB,2DCbNC,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,+BEzI5B,kCACA,IAAMC,EAEK,QAFLA,EAGK,QAHLA,EAII,QAJJA,EAKI,SALJA,EAMK,SANLA,EAOK,SAGEtG,EAAS,CACpBuG,QAAQ,eAAD,OAVE,QAUF,KACPC,QAAQ,eAAD,OAAiBF,EAAjB,KACPtD,QAAQ,eAAD,OAAiBsD,EAAjB,KACPrG,OAAO,eAAD,OAAiBqG,EAAjB,KACNG,OAAO,eAAD,OAAiBH,EAAjB,KACNI,QAAQ,eAAD,OAAiBJ,EAAjB,KACPK,QAAQ,eAAD,OAAiBL,EAAjB,KACPM,SAAS,eAAD,OAAiBN,EAAjB,Q","file":"static/js/main.a87eaaad.chunk.js","sourcesContent":["// Provides the authorization status for the user's page globally\nimport React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Checks if the user is authenticated\nexport const AuthContext = createContext();\n\nexport default function AuthProvider({ children }) {\n  const [isAuth, setAuth] = useState(false);\n  const [user, setUser] = useState({});\n\n  // Brings the authentication status and user object to the provider\n  // It re-renders everytime with the page so the saved gifs are properly updated\n  useEffect(() => {\n    const fetchFromServer = async () => {\n      try {\n        let response = await axios.get(\n          \"http://localhost:5000/auth/authenticate/\"\n        );\n        let { isAuthenticated, user } = response.data;\n        await setAuth(isAuthenticated);\n        await setUser(user);\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n    fetchFromServer();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser, isAuth, setAuth }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import styled from \"styled-components\";\nimport { device } from \"./device\";\n\nexport const AppContainer = styled.div`\n  min-height: 100vh;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  color: var(--tertiary-color);\n  background: var(--primary-color);\n`;\n\nexport const SContainer = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SGifsFlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 90vw;\n`;\n\nexport const SGifsListContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: center;\n  align-content: center;\n  margin: 40px 0px;\n\n  @media ${device.tablet} {\n    grid-template-columns: 1fr;\n    margin-top: 60px;\n  }\n`;\n\nexport const SInnerFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  width: 30vw;\n  height: 30vh;\n  background: var(--tertiary-color);\n`;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { Form } from \"@unform/web\";\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    /* reset */\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    outline: 0;\n\n    /* variables */\n    --primary-color: #553c8b;\n    --secondary-color: #303960;\n    --tertiary-color: #ffffff;\n    --ghost-transition-time: 0.3s;\n  }\n\n  html, body {\n    height: 100vh;\n    width: 100%;\n    font-family: 'Roboto', sans-serif;\n  }\n\n  input {\n    border-radius: 3px;\n    padding: 10px;\n    font-size: 1.1em;\n  }\n`;\n\nexport const SButton = styled.button`\n  text-decoration: none;\n  border: 4px solid var(--tertiary-color);\n  border-radius: 5px;\n  font-size: 1em;\n  padding: 0.5em 3em;\n  transition: all 0.2s;\n  background: var(--secondary-color);\n  color: var(--tertiary-color);\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0px 4px 8px var(--secondary-color);\n  }\n\n  &:active {\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`;\n\nexport const SLabel = styled.label`\n  font-size: 1.5em;\n`;\n\nexport const SForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SLoginSigninSuggestion = styled.p`\n  margin-top: 20px;\n\n  a {\n    color: var(--tertiary-color);\n  }\n`;\n","// Provides the gifs globally\n\nimport React, { useState, createContext } from \"react\";\n\n// Fetched gifs\nexport const GifsContext = createContext();\n\nexport default function GifsProvider({ children }) {\n  const [gifs, setGifs] = useState([]);\n\n  return (\n    <GifsContext.Provider value={{ gifs, setGifs }}>\n      {children}\n    </GifsContext.Provider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/ghost-logo.b5bbf8ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.fbd34f05.svg\";","import styled from \"styled-components\";\nimport { device } from \"../../assets/globalStyles/device\";\n\nexport const SHeader = styled.header`\n  background: var(--primary-color);\n\n  display: flex;\n  flex-shrink: 0;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 20px;\n  z-index: 10;\n`;\n\nexport const SLogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  a {\n    color: var(--tertiary-color);\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  img {\n    max-height: 40px;\n    margin-right: 10px;\n  }\n`;\n\nexport const SNav = styled.nav`\n  display: flex;\n\n  a {\n    color: var(--tertiary-color);\n    text-decoration: none;\n    margin-right: 10px;\n    cursor: pointer;\n  }\n\n  @media ${device.tablet} {\n    line-height: normal;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    background: var(--primary-color);\n    transition: 0.4s;\n    right: ${(props) => (props.isMenuClicked ? \"0\" : \"100%\")};\n\n    a {\n      padding: 30px;\n      font-size: 2em;\n    }\n  }\n`;\n\nexport const SBurgerMenu = styled.div`\n  display: none;\n  z-index: 99;\n  cursor: pointer;\n\n  @media ${device.tablet} {\n    display: inline-block;\n  }\n`;\n\nexport const SBar = styled.div`\n  width: 35px;\n  height: 5px;\n  background-color: var(--tertiary-color);\n  margin: 6px 0;\n  transition: 0.4s;\n  transform: ${(props) =>\n    props.isMenuClicked ? \"rotate(-45deg) translate(-9px, 6px)\" : \"none\"};\n`;\n\nexport const SBar2 = styled(SBar)`\n  transform: none;\n  opacity: ${(props) => (props.isMenuClicked ? 0 : 1)};\n`;\n\nexport const SBar3 = styled(SBar)`\n  transform: ${(props) =>\n    props.isMenuClicked ? \"rotate(45deg) translate(-8px, -8px)\" : \"none\"};\n`;\n","import styled from \"styled-components\";\nimport { device } from \"../../assets/globalStyles/device\";\n\nexport const SLogoutButton = styled.button`\n  border: none;\n  background: none;\n  color: var(--tertiary-color);\n  font-size: 1em;\n  cursor: pointer;\n  margin-right: 10px;\n\n  @media ${device.tablet} {\n    font-size: 2em;\n  }\n`;\n","import React from \"react\";\nimport { SLogoutButton } from \"./styles\";\n\nexport default function LogoutButton({ handleClick, hideNav }) {\n  return (\n    <SLogoutButton\n      onClick={() => {\n        handleClick();\n        hideNav();\n      }}\n    >\n      Logout\n    </SLogoutButton>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../store/AuthProvider\";\nimport axios from \"axios\";\n\nimport {\n  SHeader,\n  SNav,\n  SLogoContainer,\n  SBurgerMenu,\n  SBar,\n  SBar2,\n  SBar3,\n} from \"./styles\";\nimport GhostLogo from \"../../assets/images/ghost-logo.svg\";\nimport LogoutButton from \"../LogoutButton/index\";\n\nexport default function Header() {\n  const { isAuth, setAuth, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const [isMenuClicked, setClick] = useState(false);\n\n  async function handleClick() {\n    // Logs out the user\n    try {\n      const response = await axios.get(\"http://localhost:5000/auth/logout\");\n      let { isAuthenticated, userInfo } = response.data;\n      await setAuth(isAuthenticated);\n      await setUser(userInfo);\n      // Sends user to login page and reloads the page\n      await history.push(\"/login\");\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  function toggleNav() {\n    setClick(!isMenuClicked);\n  }\n\n  function hideNav() {\n    setClick(false);\n  }\n\n  return (\n    <SHeader>\n      <SLogoContainer>\n        <img src={GhostLogo} alt=\"Ghost Logo\" />\n        <NavLink to=\"/\">Gabriska's Gif Searcher</NavLink>\n      </SLogoContainer>\n      <SNav isMenuClicked={isMenuClicked}>\n        <NavLink to=\"/\" onClick={hideNav}>\n          Home\n        </NavLink>\n        {isAuth ? (\n          <LogoutButton handleClick={handleClick} hideNav={hideNav} />\n        ) : (\n          <NavLink to=\"/login\" onClick={hideNav}>\n            Login\n          </NavLink>\n        )}\n        {isAuth ? (\n          <span></span>\n        ) : (\n          <NavLink to=\"/signin\" onClick={hideNav}>\n            Signin\n          </NavLink>\n        )}\n        <NavLink to=\"/user\" onClick={hideNav}>\n          Saved gifs\n        </NavLink>\n      </SNav>\n      <SBurgerMenu onClick={toggleNav}>\n        <SBar isMenuClicked={isMenuClicked} />\n        <SBar2 isMenuClicked={isMenuClicked} />\n        <SBar3 isMenuClicked={isMenuClicked} />\n      </SBurgerMenu>\n    </SHeader>\n  );\n}\n","import styled from \"styled-components\";\nimport { device } from \"../../assets/globalStyles/device\";\n\nexport const SFooter = styled.footer`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(var(--primary-color), var(--secondary-color));\n  padding: 20px;\n\n  a {\n    color: var(--tertiary-color);\n  }\n\n  span {\n    margin-right: 4px;\n  }\n\n  @media ${device.mobileL} {\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\n\nimport { SFooter } from \"./styles\";\n\nexport default function Footer() {\n  return (\n    <SFooter>\n      <div>\n        <p>\n          Developed with{\" \"}\n          <span role=\"img\" aria-label=\"love\">\n            ❤️\n          </span>{\" \"}\n        </p>\n      </div>\n      <div>\n        <p>\n          {\" \"}\n          by <a href=\"https://github.com/gabrielprrd\">Gabriel Afonso</a>\n        </p>\n      </div>\n    </SFooter>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const SLoadingSpinner = styled.div`\n  width: 200px;\n  height: 200px;\n  display: inline-block;\n  overflow: hidden;\n  background: var(--primary-color);\n\n  @keyframes ldio-z5g5ym4b1c {\n    0% {\n      top: 94px;\n      left: 94px;\n      width: 0;\n      height: 0;\n      opacity: 1;\n    }\n    100% {\n      top: 17px;\n      left: 17px;\n      width: 154px;\n      height: 154px;\n      opacity: 0;\n    }\n  }\n\n  .ldio-z5g5ym4b1c div {\n    position: absolute;\n    border-width: 6px;\n    border-style: solid;\n    opacity: 1;\n    border-radius: 50%;\n    animation: ldio-z5g5ym4b1c 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n  }\n\n  .ldio-z5g5ym4b1c div:nth-child(1) {\n    border-color: #ffffff;\n  }\n\n  .ldio-z5g5ym4b1c div:nth-child(2) {\n    border-color: #f0f5f6;\n    animation-delay: -0.5s;\n  }\n\n  .ldio-z5g5ym4b1c {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    transform: translateZ(0) scale(1);\n    backface-visibility: hidden;\n    transform-origin: 0 0; /* see note above */\n  }\n\n  .ldio-z5g5ym4b1c div {\n    box-sizing: content-box;\n  }\n`;\n","import React from \"react\";\nimport { SContainer } from \"../../assets/globalStyles/containers\";\nimport { SLoadingSpinner } from \"./styles\";\n\nexport default function index() {\n  return (\n    <SContainer>\n      <SLoadingSpinner>\n        <div className=\"ldio-z5g5ym4b1c\">\n          <div></div>\n          <div></div>\n        </div>\n      </SLoadingSpinner>\n    </SContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const ScrollTopBtn = styled.div`\n  display: ${({ showScroll }) => (showScroll ? \"flex\" : \"none\")};\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  right: 40px;\n  bottom: 40px;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: var(--secondary-color);\n  color: var(--tertiary-color);\n  transition: var(--ghost-transition-time);\n  cursor: pointer;\n  z-index: 99;\n\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0px 4px 8px var(--secondary-color);\n  }\n\n  img {\n    height: 60%;\n    transform: rotate(-90deg);\n  }\n`;\n","import React, { useState } from \"react\";\nimport { ScrollTopBtn } from \"./styles\";\nimport Arrow from \"../../assets/images/arrow.svg\";\n\nexport default function ScrollTopButton() {\n  const [showScroll, setShowScroll] = useState(false);\n\n  function checkScrollTop() {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(true);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(false);\n    }\n  }\n\n  function scrollTop() {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }\n\n  window.addEventListener(\"scroll\", checkScrollTop);\n\n  return (\n    <ScrollTopBtn onClick={scrollTop} showScroll={showScroll}>\n      <img src={Arrow} alt=\"Scroll back to top\" />\n    </ScrollTopBtn>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"./AuthProvider\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { isAuth } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth ? (\n          <Component {...location} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n}\n","import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// Components\nimport Header from \"./components/Header/index\";\nimport Footer from \"./components/Footer/index\";\nimport Loading from \"./components/Loading/index\"; // lazy loading\nimport ScrollTopButton from \"./components/ScrollTopButton/index\";\n\n// Styles\nimport { GlobalStyle } from \"./assets/globalStyles/globalStyles\";\nimport { AppContainer } from \"./assets/globalStyles/containers\";\n\n// Context\nimport GifsProvider from \"./store/GifsProvider\";\nimport AuthProvider from \"./store/AuthProvider\";\n\n// Routes\nimport PrivateRoute from \"./store/routes\";\n\n// Pages\nconst Home = lazy(() => import(\"./pages/Home/index\"));\nconst Login = lazy(() => import(\"./pages/Login/index\"));\nconst Signin = lazy(() => import(\"./pages/Signin/index\"));\nconst User = lazy(() => import(\"./pages/User/index\"));\n\nfunction App() {\n  return (\n    <GifsProvider>\n      <AuthProvider>\n        <Router>\n          <GlobalStyle />\n          <AppContainer>\n            <Suspense fallback={<Loading />}>\n              <Header />\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signin\" component={Signin} />\n              <PrivateRoute path=\"/user\" component={User} />\n              <ScrollTopButton />\n              <Footer />\n            </Suspense>\n          </AppContainer>\n        </Router>\n      </AuthProvider>\n    </GifsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Media queries\nconst size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n};\n"],"sourceRoot":""}